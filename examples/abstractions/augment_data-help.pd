#N canvas 458 190 608 626 10;
#X obj 51 560 augment_data;
#X obj 33 9 cnv 15 380 70 empty empty empty 20 12 0 14 #c4fcc4 #404040 0;
#X text 44 17 [augment_data]: abstraction to augment input training data for better fitting a neural network;
#X text 49 51 Written by Alexandros Drymonitis;
#X text 49 88 Arguments:;
#X text 47 108 1st: Number of augmenting iterations;
#X text 48 126 2nd: Augmentation range;
#X text 49 144 3rd (optional): If each input needs a different augmentation range \, then each successive argument will determine the augmentation range for each input separately. In this case \, supply as many augmentation range arguments as the number of input training data;
#X text 54 233 Inlets:;
#X text 59 252 1st: list of output training data;
#X text 91 268 "augment" message to augment the input data and pack them in a list with the output data;
#X text 94 297 "clear" message to clear contents;
#X text 95 313 "show" message to show list of input and output data. first element of the list will be the number of input data set automatically;
#X text 96 358 "hide" to hide data;
#X text 55 385 2nd: list of input training data (this data will be augmented);
#X text 56 440 Outlets:;
#X text 59 460 1st: list of augmented input data together with output data (not augmented);
#X text 58 496 2nd: bangs when done;
